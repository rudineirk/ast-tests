@@grammar::ATOM

start::Start = {statement}+ $ ;

statement = assignment ;

assignment::Assignment
  =
  {WHITESPACE} var:identifier {WHITESPACE} '=' {WHITESPACE} value:value END_STMT
  ;
END_STMT = ';' | NEWLINE ;
identifier::Identifier = /[a-zA-Z][a-zA-Z0-9]*/ ;

value = STRING | FLOAT | INT | TRUE | FALSE ;
TRUE::BoolTrue = 'true';
FALSE::BoolFalse = 'false';
INT::Int = /-?[0-9]+/ ;
FLOAT::Float = /-?([0-9]+\.[0-9]*|\.[0-9]+)/ ;
STRING::String = /(\'([^\\\r\n\f\']|\\\')*\'|\"([^\\\r\n\f\"]|\\\")*\")/ ;

ZERO = '0' ;
ONE = '1' ;
NONZERO_DIGIT = /[1-9]/ ;
DIGIT = /[0-9]/ ;
UPPERCASE_LETTER = /[A-Z]/ ;
LOWERCASE_LETTER = /[a-z]/ ;
LETTER = UPPERCASE_LETTER | LOWERCASE_LETTER ;
ALPHANUM = DIGIT | LETTER ;
WHITESPACE = /\s+/ ;
NEWLINE = (WHITESPACE | (['\\r'] /[\n\r\f]/) [WHITESPACE]) ;
